- 객체지향이란?
우리가 실생활에서 쓰는 모든 것을 객체라고 하며, 객체 지향 프로그래밍은 프로그램
구현에 필요한 객체를 파악하고, 각각의 객체들의 역할이 무엇인지 정의하며 객체들
간의 상호작용을 통해 프로그램을 만드는것을 말한다.

- 클래스와 객체 차이
객체란 자신의 고유 속성을 가진 물리적, 추상적인 모든 대상을 말하며,
클래스란 자바 프로그램에서 객체를 생성하기 위한 일종의 설계도이다. 객체가 가지
는 속성과 행동으로 구성되어 있다. 이때 new 예약어로생성된 객체 하나하나를 
인스턴스라고 한다.

- static이란 무엇인가?
java에서 static변수는 메모리에 한번 할당되어 프로그램이 종료될 때 해제되는 변수
로, 메모리에 한번 할당되므로 여러 객체가 해당 메모리를 공유하게 된다.

- 프로세스, 쓰레드 차이
프로세스는 운영체제로부터 자원을 할당받는 작업의 단위이다.
스레드는 할당 받은 자원을 이용하는 실행의 단위이고 프로세스 내에 여러개 생길
수 있다. 어플리케이션 하나가 프로세스고 그 안의 분기 처리가 스레드인 셈이다.

- Collection
자바에서 목록성 데이터를 처리하는 자료구조를 의미한다.
이때 목록성 데이터에는 set, list, queue가 있다. 

- TCP, UDP
연결형 서비스로 가상 회선 방식을 제공한다.
3-way handshaking과정을 통해 연결을 설정하고 4-way handshaking을 통해 해제한다.

TCP가 가상 회선 방식을 제공한다는 것은 발신지와 수신지를 연결하여 패킷을 전송
하기 위한 논리적 경로를배정한다는 말입니다. 그리고 3-way handshaking과정은 목
적지와 수신지를 확실히 하여 정확한 전송을 보장하기 위해서세션을 수립하는 과정
을 의미합니다. TCP가 이러한 특징을 지니는 이유는 간단명료합니다.바로 TCP는 연
결형 서비스로 신뢰성을 보장하기 때문입니다. 그래서 3-way handshaking의 과정도
사용하는 것이고, 데이터의 흐름제어나 혼잡 제어와 같은 기능도 합니다. 하지만 이
러한 기능때문에 UDP보다 속도가 느리게 됩니다.(이러한 기능은 CPU를 사용하기 
때문에 속도에 영향을 주는 것입니다.)그렇기에 TCP는 연속성보다 신뢰성있는 전송
이 중요할 때에 사용하는 프로토콜로 예를 들면 파일 전송과 같은 경우에 사용됩니다!
흔히 TCP의 반대라고 하는 UDP는 이러한 과정을 겪지 않는다. 그렇기 때문에 속도가 
빠르며, 데이터 신뢰도가 낮고, 데이터 전달 순서도 알 수 없다.

- C언어, Python, Java의 차이?
C언어는 속도가 빠르며, 절차지향형 언어이다. java는 운영체제에서 실행되지 않고
jvm을 번역을 사용하여 실행된다. java는 byte코드 파일이다. python은 속도가 느리며
변수 선언에 있어 좀 더 포괄적이고, 들여쓰기의 영향을 받는다.

- 자바의 특징 (객체지향의 특징)
높은 이식성을 갖고 있어 다른 운영체제에서 이용할 수 있다.
객체를 생성할 때 자동으로 메모리 영역을 찾아 할당하고, 사용이 끝나면 Garbage
 Collector를 실행해 자동으로 사용하지 않는 객체를 제거해준다.

- 변수의 종류
클래스 변수, 인스턴스 변수, 매개변수, 지역변수
클래스 변수는 앞에 static이란 예약어가 붙어 있으며 프로그램이 끝날때 소멸된다.
인스턴스 변수는 메소드 밖에, 클래스 안에 선언된 변수로 static 예약어가 없어야 한다.

- 컴파일이란?
사람이 이해하는 언어를 컴퓨터가 이해할 수 있는 언어로 바꾸어 주는 과정을 컴파일
이라고 한다.